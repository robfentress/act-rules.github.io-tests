{"componentChunkName":"component---src-templates-default-js","path":"/pages/implementations/earl-reports/","webpackCompilationHash":"6d96932c79274303d2f2","result":{"data":{"markdownRemark":{"html":"<p>To display a accessibility test tool or methodology on the ACT-R Community website, ACT-R use the <a href=\"https://www.w3.org/TR/EARL10-Schema/\">Evaluation And Reporting Language</a> expressed using <a href=\"https://json-ld.org\">JSON-LD</a>. Tool developers that have an EARL reporter should be able to provide their existing reports. If you don't already have an EARL reporter, we provided a basic data structure that you can use.</p>\n<h3 id=\"context-and-graph\"><a href=\"#context-and-graph\" aria-label=\"context and graph permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Context And Graph</h3>\n<p>On the top level object, there should be a <code class=\"language-text\">@context</code> and <code class=\"language-text\">@graph</code>. The <code class=\"language-text\">@context</code> is a URL to a definition file that describes the data structure. The <code class=\"language-text\">@graph</code> property contains an array of <code class=\"language-text\">TestSubject</code> objects.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"@context\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://act-rules.github.io/earl-context.json\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"@graph\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> ... <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"test-subject\"><a href=\"#test-subject\" aria-label=\"test subject permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test Subject</h3>\n<p>Create a single test subject for each <a href=\"../testcase/\">test case</a>. The <code class=\"language-text\">TestSubject</code> has three required properties:</p>\n<ul>\n<li><code class=\"language-text\">@type</code>: Must be <code class=\"language-text\">TestSubject</code>, to distinguish it from other data types that might exist in an EARL report.</li>\n<li><code class=\"language-text\">source</code>: This must be the URL of the test case.</li>\n<li><code class=\"language-text\">assertions</code>: This contains an array of <code class=\"language-text\">Assertion</code> objects</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"@context\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://act-rules.github.io/earl-context.json\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"@graph\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"TestSubject\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://act-rules.github.io/testcases/a1b64e/6c3ac31577c3cb2d968fc26c4075dd533b5513fc.html\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"assertions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> ... <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Advanced</strong>: <code class=\"language-text\">assertions</code> is a <code class=\"language-text\">@reverse</code> of <code class=\"language-text\">earl:subject</code>, to group assertions by test subject. When the JSON-LD is framed, the structure is flattened back to <code class=\"language-text\">earl:subject</code>. Using <code class=\"language-text\">earl:subject</code> and a flat array of Assertions works as well.</p>\n<h3 id=\"assertion\"><a href=\"#assertion\" aria-label=\"assertion permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assertion</h3>\n<p>Add an <code class=\"language-text\">Assertion</code> object to the <code class=\"language-text\">assertions</code> array for each outcome provided by any of the rules / test procedures in your implementation. Generally, test cases are atomic enough that every implemented rule would only have a single outcome, although in some cases (such as duplicate IDs) a rule may return more than one outcome. In such cases, there should be multiple Assertions, one for each outcome.</p>\n<p>The following properties are required for each Assertion:</p>\n<ul>\n<li><code class=\"language-text\">@type</code>: This must be <code class=\"language-text\">Assertion</code>, to distinguish it from other data types that might exist in an EARL report.</li>\n<li><code class=\"language-text\">test.title</code>: A title for the rule / test procedure as it is known in the implementation</li>\n<li>\n<p><code class=\"language-text\">result.outcome</code>: One of the following values:</p>\n<ul>\n<li><code class=\"language-text\">earl:passed</code>: A node in the test case passed the rule</li>\n<li><code class=\"language-text\">earl:failed</code>: A node in the test case failed the rule</li>\n<li><code class=\"language-text\">earl:inapplicable</code>: The rule is inapplicable in the test case</li>\n<li><code class=\"language-text\">earl:cantTell</code>: The tool could not be sure whether or not a node passed of failed the rule</li>\n<li><code class=\"language-text\">earl:untested</code>: The rule was not executed on the test case</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">\"@context\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://act-rules.github.io/earl-context.json\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"@graph\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"TestSubject\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://act-rules.github.io/testcases/a1b64e/6c3ac31577c3cb2d968fc26c4075dd533b5513fc.html\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token property\">\"assertions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Assertion\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"My Tool's rule title\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token property\">\"result\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">\"outcome\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"earl:passed\"</span> <span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">]</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Advanced</strong>: All required properties map to <a href=\"http://www.w3.org/ns/earl#\">EARL</a>, except for <code class=\"language-text\">title</code> and <code class=\"language-text\">source</code> which are properties of <a href=\"http://purl.org/dc/terms/\">Dublin Core</a>. Property names can be anything, as long as they can be expanded to the correct URL.</p>\n<h2 id=\"contribute-an-implementation\"><a href=\"#contribute-an-implementation\" aria-label=\"contribute an implementation permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contribute An Implementation</h2>\n<p>If you developed an accessibility tool or a testing methodology, and would like to have your implementation included in the ACT-R website, there are two ways you can do so.</p>\n<ol>\n<li>If you have a tool that can return a data format, you will need to run your tests against the <a href=\"../testcases/\">ACT-R test cases</a> and <a href=\"../reporting/\">submit a report</a>.</li>\n<li>If you use manual test methodology, where you fill results into some report template or tool, you can <a href=\"../wcag-em-tool/\">Use the WCAG-EM Report Tool</a> instead to produce implementation reports.</li>\n</ol>","frontmatter":{"title":"Reporting Format"}},"site":{"siteMetadata":{"title":"ACT-Rules Community","keywords":["WCAG","ACT Rules","Accessibility","W3C"],"baseHref":"https://act-rules.github.io"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"pages/implementations/earl-reports/","fileName":null,"sourceInstanceName":"pages","markdownType":"implementations","fastmatterAttributes":"{\"title\":\"Reporting Format\"}","changelog":null,"title":"Reporting Format","ruleType":null}}}